type: json
data:
  # use the same URL as other index-related collector configs which enables caching of response data and
  # reduced overhead SPM JSON-based monitor has on the system
  url: /_stats?indexing=true&store=true&search=true&merge=true&refresh=true&flush=true&level=shards&format=smile
  server: ${ST_MONITOR_ES_NODE_HOSTPORT}
  basicHttpAuthUsername: ${ST_MONITOR_ES_NODE_BASICAUTH_USERNAME}
  basicHttpAuthPassword: ${ST_MONITOR_ES_NODE_BASICAUTH_PASSWORD}
  smileFormat: true
  async: true
require:
  - className: com.sematext.spm.client.es.EsVersionCheck
    values: 0

observation:
  - name: mergeStats_primary
    metricNamespace: es
    path: $.indices.${indexName}.shards.${shard}[?(@.routing.node=${nodeId} && @.routing.primary=true)].merges

    metric:
      - name: indexing.merges.primaries
        source: total
        type: counter
        agentAggregation: SUM
        label: merge count (prim)
        description: merge count on primary shards

      - name: indexing.merges.time.primaries
        source: total_time_in_millis
        type: counter
        agentAggregation: SUM
        label: merge time (prim)
        description: merge time on primary shards
        unit: ms

      - name: indexing.merges.docs.primaries
        source: total_docs
        type: counter
        agentAggregation: SUM
        label: merged docs count (prim)
        description: merged docs count on primary shards

      - name: indexing.merges.docs.size.primaries
        source: total_size_in_bytes
        type: counter
        agentAggregation: SUM
        label: merged docs size (prim)
        description: merged docs size on primary shards
        unit: bytes

    tag:
      - name: es.cluster
        value: json:smile:/_cluster/health?format=smile $.cluster_name

      - name: es.node.id
        value: ${nodeId}

      - name: es.node
        value: json:smile:/_cluster/nodes/_local?format=smile $.nodes.${localNodeId}.name

      - name: es.index
        value: ${indexName}

    accept:
      - name: nodeId
        value: json:smile:/_cluster/nodes/_local?format=smile $.nodes.${localNodeId} return:pathTags:localNodeId


  - name: mergeStats_total
    metricNamespace: es
    path: $.indices.${indexName}.shards.${shard}[?(@.routing.node=${nodeId})].merges

    metric:
      - name: indexing.merges.total
        source: total
        type: counter
        agentAggregation: SUM
        label: merge count (all)
        description: merge count on all (primary and replica) shards

      - name: indexing.merges.time.total
        source: total_time_in_millis
        type: counter
        agentAggregation: SUM
        label: merge time (all)
        description: merge time on all (primary and replica) shards
        unit: ms

      - name: indexing.merges.docs.total
        source: total_docs
        type: counter
        agentAggregation: SUM
        label: merged docs count (all)
        description: merged docs count on all (primary and replica) shards

      - name: indexing.merges.docs.size.total
        source: total_size_in_bytes
        type: counter
        agentAggregation: SUM
        label: merged docs size (all)
        description: merged docs size on all (primary and replica) shards
        unit: bytes

    tag:
      - name: es.cluster
        value: json:smile:/_cluster/health?format=smile $.cluster_name

      - name: es.node.id
        value: ${nodeId}

      - name: es.node
        value: json:smile:/_cluster/nodes/_local?format=smile $.nodes.${localNodeId}.name

      - name: es.index
        value: ${indexName}

    accept:
      - name: nodeId
        value: json:smile:/_cluster/nodes/_local?format=smile $.nodes.${localNodeId} return:pathTags:localNodeId

