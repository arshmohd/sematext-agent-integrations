type: json
data:
  url: /pools/default/buckets/
  server: ${COUCHBASE_HOSTPORT}
  basicHttpAuthUsername: ${COUCHBASE_BASICAUTH_USERNAME}
  basicHttpAuthPassword: ${COUCHBASE_BASICAUTH_PASSWORD}

observation:
  - name: buckets
    metricNamespace: couchbase
    path: $.[?(@.name=${bucketName})]

    metric:
      - name: bg.wait.time.avg
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.avg_bg_wait_time[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: average background wait
        unit: sec
        description: Average background wait time

      - name: disk.commit.time.avg
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.avg_disk_commit_time[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: average commit time
        unit: sec
        description: Average disk commit time

      - name: disk.update.time.avg
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.avg_disk_update_time[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: average update time
        unit: microsec
        description: Average disk update time

      - name: bg.wait.total
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.bg_wait_total[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: bytes read
        unit: bytes
        description: Average background wait time

      - name: bytes.read
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.bytes_read[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: bytes read
        unit: bytes
        description: Number of bytes per second sent into a bucket.

      - name: bytes.written
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.bytes_written[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: bytes written
        unit: bytes
        description: Number of bytes per second sent from a bucket

      - name: cas.badval
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.cas_badval[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: cas bad values
        description: Compare and Swap bad values

      - name: cas.hits
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.cas_hits[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: cas hits
        description: Compare and Swap hits

      - name: cas.misses
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.cas_misses[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: cas misses
        description: Compare and Swap misses

      - name: cmd.get
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.cmd_get[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: cmd gets
        description: Number of get commands

      - name: cmd.set
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.cmd_set[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: cmd sets
        description: Number of set commands

      - name: docs.disk.actual.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_docs_actual_disk_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: doc actual disk size
        unit: bytes
        description: Couch docs total size on disk in bytes.

      - name: docs.data.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_docs_data_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: doc data disk size
        unit: bytes
        description: Couch docs data size in bytes

      - name: docs.disk.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_docs_disk_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: docs disk size
        unit: bytes
        description: Couch docs total size in bytes

      - name: docs.fragmentation
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_docs_fragmentation[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: doc fragmentation
        unit: "%"
        description: Couch docs fragmentation

      - name: data.spatial.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_spatial_data_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: spatial data size
        unit: bytesals
        description: Size of object data for spatial views

      - name: disk.spatial.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_spatial_disk_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: spatial disk size
        unit: bytes
        description: Amount of disk space occupied by spatial views

      - name: ops.spatial
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_spatial_ops[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: spatial ops
        description: Spatial operations

      - name: disk.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_total_disk_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: total disk size
        unit: bytes
        description: Couch total disk size.

      - name: views.data.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_views_data_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: view data size
        unit: bytes
        description: Size of object data for views.

      - name: views.disk.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_views_disk_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: view disk size
        unit: bytes
        description: Amount of disk space occupied by views.

      - name: views.fragmentation
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_views_fragmentation[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: view fragmentation
        unit: "%"
        description: View fragmentation

      - name: views.ops
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.couch_views_ops[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: view ops
        description: View operations

      - name: cpu.utilization
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.cpu_utilization_rate[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: cpu utilization
        unit: "%"
        description: CPU utilization percentage.

      - name: connections.current
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.curr_connections[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: connections
        description: Current bucket connections.

      - name: items.current.total
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.curr_items_tot[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: total items
        description: Num current items including those not active (replica, dead and pending states)

      - name: items.current
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.curr_items[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: memory items
        description: Num items in active vbuckets (temp + live)

      - name: decrement.hits
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.decr_hits[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: decrement hits
        description: Decrement hits

      - name: decrement.misses
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.decr_misses[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: decrement misses
        description: Decrement misses

      - name: delete.hits
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.delete_hits[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: delete hdouble_counterits
        description: Delete hits

      - name: delete.misses
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.delete_misses[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: delete misses
        description: Delete misses

      - name: disk.commits.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.disk_commit_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: commits
        description: Disk commits

      - name: disk.updates.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.disk_update_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: updates
        description: Disk updates

      - name: disk.write.queue
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.disk_write_queue[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: writes
        description: Disk write queue depth

      - name: ep.bg.fetched
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_bg_fetched[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: reads
        description: Disk reads per second

      - name: ep.cache.miss.rate
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_cache_miss_rate[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: cache miss rate
        description: Cache miss rate

      - name: ep.cache.miss.ratio
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_cache_miss_ratio[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: cache miss ratio
        unit: "%"
        description: Cache miss ratio

      - name: ep.dcp.fts.backoff
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_fts_backoff[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP fts backoff
        description: Number of backoffs for fts DCP connections

      - name: ep.dcp.fts.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_fts_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP fts count
        description: Number of fts DCP connections

      - name: ep.dcp.fts.items.remaining
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_fts_items_remaining[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP fts items remaining
        description: Number of fts items remaining to be sent

      - name: ep.dcp.fts.items.sent
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_fts_items_sent[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP fts items sent
        description: Number of fts items sent

      - name: ep.dcp.fts.producer.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_fts_producer_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP fts producers
        description: Number of fts producers

      - name: ep.dcp.2i.total.bytes
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_2i_total_bytes[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: DCP fts total bytes
        unit: bytes
        description: Number of bytes per second being sent for indexes DCP connections

      - name: ep.dcp.2i.backoff
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_2i_backoff[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP indexes backoff
        description: Number of backoffs for indexes DCP

      - name: ep.dcp.2i.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_2i_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP indexes count
        description: Number of indexes DCP connections

      - name: ep.dcp.2i.items.remaining
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_2i_items_remaining[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP indexes items remaining
        description: Number of indexes items remaining to be sent

      - name: ep.dcp.2i.items.sent
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_2i_items_sent[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP indexes items sent
        description: Number of indexes items sent

      - name: ep.dcp.2i.producer.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_2i_producer_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP indexes producer
        description: Number of indexes producers

      - name: ep.dcp.other.backoff
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_other_backoff[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP other backoff
        description: Number of backoffs for other DCP connections

      - name: ep.dcp.other.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_other_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP other count
        description: Number of other DCP connections

      - name: ep.dcp.other.items.remaining
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_other_items_remaining[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP other items remaining
        description: Number of other items remaining to be sent

      - name: ep.dcp.other.items.sent
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_other_items_sent[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: DCP other items sent
        description: Number of other items sent

      - name: ep.dcp.other.producer.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_other_producer_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP other producers
        description: Number of other producers

      - name: ep.dcp.other.total.bytes
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_other_total_bytes[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: DCP other total bytes
        unit: bytes
        description: Number of bytes per second being sent for other DCP connections

      - name: ep.dcp.replica.backoff
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_replica_backoff[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP replica backoff
        description: Number of backoffs for replica DCP connections

      - name: ep.dcp.replica.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_replica_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP replica count
        description: Number of replica DCP connections

      - name: ep.dcp.replica.items.remaining
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_replica_items_remaining[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP replica items remaining
        description: Number of replica items remaining to be sent

      - name: ep.dcp.replica.items.sent
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_replica_items_sent[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: DCP replica items sent
        description: Number of replica items sent

      - name: ep.dcp.replica.producer.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_replica_producer_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP replica producer
        description: Number of replica producers

      - name: ep.dcp.replica.bytes.total
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_replica_total_bytes[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: DCP replica total bytes
        unit: bytes
        description: Number of bytes per second being sent for replica DCP connections

      - name: ep.dcp.views.backoff
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_views_backoff[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP views backoff
        description: Number of backoffs for views DCP connections

      - name: ep.dcp.views.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_views_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP views count
        description: Number of views DCP connections

      - name: ep.dcp.views.items.remaining
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_views_items_remaining[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP views items remaining
        description: Number of views items remaining to be sent

      - name: ep.dcp.views.items.sent
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_views_items_sent[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP views items sent
        description: Number of views items sent

      - name: ep.dcp.views.producer.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_views_producer_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP views producer
        description: Number of views producers

      - name: ep.dcp.views.bytes.total
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_views_total_bytes[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_gauge
        label: DCP views total bytes
        unit: bytes
        description: Number of bytes per second being sent for views DCP connections

      - name: ep.dcp.xdcr.backoff
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_xdcr_backoff[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: DCP XDCR backoff
        description: Number of backoffs for XDCR DCP connections

      - name: ep.dcp.xdcr.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_xdcr_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP XDCR count
        description: Number of XDCR DCP connections

      - name: ep.dcp.xdcr.items.remaining
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_xdcr_items_remaining[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP XDCR items remaining
        description: Number of XDCR items remaining to be sent

      - name: ep.dcp.xdcr.items.sent
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_xdcr_items_sent[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: DCP XDCR items sent
        description: Number of XDCR items sent

      - name: ep.dcp.xdcr.producer.count
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_xdcr_producer_count[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: DCP XDCR producer
        description: Number of XDCR producers

      - name: ep.dcp.xdcr.total.bytes
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_dcp_xdcr_total_bytes[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: DCP XDCR total bytes
        unit: bytes
        description: Number of bytes per second being sent for XDCR DCP connections

      - name: ep.diskqueue.drain
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_diskqueue_drain[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: queue drained
        description: Total drained items in disk queue

      - name: ep.diskqueue.fill
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_diskqueue_fill[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: queued
        description: Total enqueued items in disk queue

      - name: ep.diskqueue.items
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_diskqueue_items[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: queue waiting items
        description: Total number of items waiting to be written to disk

      - name: ep.flusher.todo
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_flusher_todo[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: current flushing items
        description: Number of items currently being written

      - name: ep.item.commit.failed
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_item_commit_failed[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: failed commits
        description: Number of times a transaction failed to commit due to storage errors

      - name: ep.kv.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_kv_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: kv size
        unit: bytes
        description: Total amount of user data cached in RAM in this bucket

      - name: ep.max.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_max_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: max size
        unit: bytes
        description: The maximum amount of memory this bucket can use

      - name: ep.mem.high.wat
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_mem_high_wat[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: memory high water mark
        unit: bytes
        description: Memory usage high water mark for auto-evictions

      - name: ep.mem.low.wat
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_mem_low_wat[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: memory low water mark
        unit: bytes
        description: Memory usage low water mark for auto-evictions

      - name: ep.meta.data.memory
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_meta_data_memory[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: metadata mem
        unit: bytes
        description: Total amount of item metadata consuming RAM in this bucket

      - name: ep.num.non.resident
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_num_non_resident[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: non-resident items
        description: Number of non-resident items

      - name: ep.num.ops.del.meta
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_num_ops_del_meta[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: ops del meta
        description: Number of delete operations per second for this bucket as the target for XDCR

      - name: ep.num.ops.del.ret.meta
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_num_ops_del_ret_meta[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: ops del ret meta
        description: Number of delRetMeta operations per second for this bucket as the target for XDCR

      - name: ep.num.ops.get.meta
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_num_ops_get_meta[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: ops get meta
        description: Number of read operations per second for this bucket as the target for XDCR

      - name: ep.num.ops.set.meta
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_num_ops_set_meta[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: ops set meta
        description: Number of set operations per second for this bucket as the target for XDCR

      - name: ep.num.ops.set.ret.meta
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_num_ops_set_ret_meta[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: ops set rep meta
        description: Number of setRetMeta operations per second for this bucket as the target for XDCR

      - name: ep.num.value.ejects
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_num_value_ejects[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: ejects
        description: Number of times item values got ejected from memory to disk

      - name: ep.oom.errors
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_oom_errors[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: ooms
        description: Number of times unrecoverable OOMs happened while processing operations

      - name: ep.ops.create
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_ops_create[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: create ops
        description: Create operations

      - name: ep.ops.update
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_ops_update[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: update ops
        description: Update operations

      - name: ep.overhead
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_overhead[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: overhead
        description: Extra memory used by transient data like persistence queues or checkpoints

      - name: ep.queue.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_queue_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: queue size
        description: Number of items queued for storage

      - name: ep.resident.items.rate
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_resident_items_rate[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: resident items
        description: Number of resident items

      - name: ep.tap.replica.queue.drain
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_tap_replica_queue_drain[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: drain items
        description: Total drained items in the replica queue

      - name: ep.tap.total.queue.drain
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_tap_total_queue_drain[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: drain items
        description: Total drained items in the queue

      - name: ep.tap.total.queue.fill
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_tap_total_queue_fill[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: queued
        description: Total enqueued items in the queue

      - name: ep.tap.total.total.backlog.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_tap_total_total_backlog_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: backlog size
        description: Number of remaining items for replication

      - name: ep.tmp.oom.errors
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_tmp_oom_errors[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: ooms
        description: Number of times recoverable OOMs happened while processing operations

      - name: ep.vb.total
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ep_vb_total[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb total
        description: Total number of vBuckets for this bucket

      - name: evictions
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.evictions[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: evictions
        description: Number of evictions

      - name: get.hits
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.get_hits[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: get hits
        description: Number of get hits

      - name: get.misses
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.get_misses[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: get misses
        description: Number of get misses

      - name: hibernated.requests
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.hibernated_requests[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: hibernated requests
        description: Number of streaming requests idle

      - name: hibernated.waked
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.hibernated_waked[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: hibernated waked
        description: Rate of streaming request wakeups

      - name: hit.ratio
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.hit_ratio[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: hit ratio
        description: Hit ratio

      - name: increment.hits
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.incr_hits[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: increment hits
        description: Number of increment hits

      - name: increment.misses
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.incr_misses[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: increment misses
        description: Number of increment misses

      - name: mem.actual.free
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.mem_actual_free[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: actual free
        unit: bytes
        description: Actual free memory

      - name: mem.actual.used
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.mem_actual_used[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: actual used
        unit: bytes
        description: Used memory

      - name: mem.free
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.mem_free[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: free
        unit: bytes
        description: Free memory

      - name: mem.total
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.mem_total[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: total
        unit: bytes
        description: Total available memory

      - name: mem.used
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.mem_used[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: used
        unit: bytes
        description: Engine's total memory usage (deprecated)

      - name: mem.used.sys
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.mem_used_sys[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: used sys
        unit: bytes
        description: System memory usage

      - name: misses
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.misses[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: misses
        description: Total number of misses

      - name: ops
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.ops[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: ops
        description: Total number of operations

      - name: page.faults
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.page_faults[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: faults
        description: Number of page faults

      - name: replication.docs.rep.queue
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.replication_docs_rep_queue[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: repl docs queue

      - name: replication.meta.latency.aggr
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.replication_meta_latency_aggr[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: repl meta latency aggr

      - name: rest.requests
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.rest_requests[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: rest requests
        unit: request
        description: Number of HTTP requests

      - name: swap.total
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.swap_total[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: swap total
        unit: bytes
        description: Total amount of swap available

      - name: swap.used
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.swap_used[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: swap used
        unit: bytes
        description: Amount of swap used

      - name: vb.active.eject
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_eject[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb active eject
        unit: items
        description: Number of items being ejected to disk from active vBuckets

      - name: vb.active.itm.memory
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_itm_memory[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb active item mem
        description: Amount of active user data cached in RAM in this bucket

      - name: vb.active.meta.data.memory
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_meta_data_memory[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb active meta mem
        description: Amount of active item metadata consuming RAM in this bucket

      - name: vb.active.num.non.resident
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_num_non_resident[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb active num non resident
        description: Number of non resident vBuckets in the active state for this bucket

      - name: vb.active.num
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_num[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb active num
        description: Number of active items

      - name: vb.active.ops.create
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_ops_create[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb active ops create
        unit: items
        description: New items being inserted into active vBuckets in this bucket

      - name: vb.active.ops.update
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_ops_update[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb active ops update
        unit: items
        description: Number of items updated on active vBucket for this bucket

      - name: vb.active.queue.age
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_queue_age[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb active queue age
        unit: ms
        description: Sum of disk queue item age in milliseconds

      - name: vb.active.queue.drain
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_queue_drain[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb active queue drain
        description: Total drained items in the queue

      - name: vb.active.queue.fill
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_queue_fill[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb active queue fill
        unit: items
        description: Number of active items being put on the active item disk queue

      - name: vb.active.queue.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_queue_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb active queue size
        description: Number of active items in the queue

      - name: vb.active.resident.items.ratio
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_active_resident_items_ratio[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb active resident items ratio
        description: Number of resident items

      - name: vb.avg.active.queue.age
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_avg_active_queue_age[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb avg active queue age
        unit: sec
        description: Average age in seconds of active items in the active item queue

      - name: vb.avg.pending.queue.age
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_avg_pending_queue_age[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb avg pending queue age
        unit: sec
        description: Average age in seconds of pending items in the pending item queue

      - name: vb.avg.replica.queue.age
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_avg_replica_queue_age[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb avg replica queue age
        unit: sec
        description: Average age in seconds of replica items in the replica item queue

      - name: vb.avg.total.queue.age
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_avg_total_queue_age[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb avg total queue age
        unit: sec
        description: Average age of items in the queue

      - name: vb.pending.curr.items
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_curr_items[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb pending curr item
        description: Number of items in pending vBuckets

      - name: vb.pending.eject
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_eject[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb pending eject
        unit: items
        description: Number of items being ejected to disk from pending vBuckets

      - name: vb.pending.itm.memory
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_itm_memory[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb pending item mem
        description: Amount of pending user data cached in RAM in this bucket

      - name: vb.pending.meta.data.memory
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_meta_data_memory[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb pending meta mem
        description: Amount of pending item metadata consuming RAM in this bucket

      - name: vb.pending.num.non.resident
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb.pending_num_non_resident[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: gauge
        label: vb pending num non resident
        description: Number of non resident vBuckets in the pending state for this bucket

      - name: vb.pending.num
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_num[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb pending num
        description: Number of pending items

      - name: vb.pending.ops.create
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_ops_create[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb pending ops create
        description: Number of pending create operations

      - name: vb.pending.ops.update
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_ops_update[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb pending ops update
        unit: items
        description: Number of items updated on pending vBucket for this bucket

      - name: vb.pending.queue.age
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_queue_age[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb pending queue age
        unit: ms
        description: Sum of disk pending queue item age in milliseconds

      - name: vb.pending.queue.drain
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_queue_drain[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb pending queue drain
        description: Total drained pending items in the queue

      - name: vb.pending.queue.fill
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_queue_fill[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb pending queue fill
        description: Total enqueued pending items in disk queue

      - name: vb.pending.queue.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_queue_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb pending queue size
        description: Number of pending items in the queue

      - name: vb.pending.resident.items.ratio
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_pending_resident_items_ratio[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb pending resident items ratio
        description: Number of resident pending items

      - name: vb.replica.curr.items
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_curr_items[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb replica curr items
        description: Number of in memory items

      - name: vb.replica.eject
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_eject[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb replica eject
        unit: items
        description: Number of items being ejected to disk from replica vBuckets

      - name: vb.replica.itm.memory
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_itm_memory[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb replica item mem
        description: Amount of replica user data cached in RAM in this bucket

      - name: vb.replica.meta.data.memory
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_meta_data_memory[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb replica meta data mem
        unit: bytes
        description: Total metadata memory

      - name: vb.replica.num.non.resident
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_num_non_resident[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb replica num non resident
        description: Number of non resident vBuckets in the replica state for this bucket

      - name: vb.replica.num
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_num[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb replica num
        description: Number of replica vBuckets

      - name: vb.replica.ops.create
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_ops_create[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb replica ops create
        description: Number of replica create operations

      - name: vb.replica.ops.update
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_ops_update[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb replica ops update
        unit: items
        description: Number of items updated on replica vBucket for this bucket

      - name: vb.replica.queue.age
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_queue_age[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb replica queue age
        unit: ms
        description: Sum of disk replica queue item age in milliseconds

      - name: vb.replica.queue.drain
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_queue_drain[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb replica queue drain
        description: Total drained replica items in the queue

      - name: vb.replica.queue.fill
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_queue_fill[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: vb replica queue fill
        description: Total enqueued replica items in disk queue

      - name: vb.replica.queue.size
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_queue_size[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb replica queue size
        description: Replica items in disk queue

      - name: vb.replica.resident.items.ratio
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_replica_resident_items_ratio[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        label: vb replica resident items ratio
        description: Number of resident replica items

      - name: vb_total_queue_age
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.vb_total_queue_age[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:avg()
        type: double_gauge
        unit: sec
        label: vb total queue age
        description: Sum of disk queue item age in milliseconds

      - name: xdc.ops
        source: json:/pools/default/buckets/${bucketName}/stats?zoom=minute $.op.samples.xdc_ops[0:${SPM_MONITOR_COLLECT_INTERVAL}] return:sum()
        type: double_counter
        label: XDCR ops
        description: Number of cross-datacenter replication operations

    tag:
      - name: couchbase.bucket.name
        value: ${bucketName}

