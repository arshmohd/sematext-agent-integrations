type: jmx

observation:
  - name: jvmMemory
    metricNamespace: jvm
    objectName: java.lang:type=Memory

    metric:
      - name: heap.used
        source: complex:HeapMemoryUsage.used
        type: gauge
        label: jvm heap used
        description: jvm heap used memory
        unit: bytes

      - name: nonheap.used
        source: complex:NonHeapMemoryUsage.used
        type: gauge
        label: jvm non-heap used
        description: jvm non-heap used memory
        unit: bytes


  - name: jvmMemoryPool
    metricNamespace: jvm
    objectName: java.lang:type=MemoryPool,name=${poolName}

    metric:
      - name: pool.used
        source: complex:Usage.used
        type: gauge
        label: jvm pool used
        description: jvm pool used memory
        unit: bytes

      - name: pool.committed
        source: complex:Usage.committed
        type: gauge
        label: jvm pool committed
        description: jvm pool committed memory
        unit: bytes

      - name: reported.pool.max
        source: complex:Usage.max
        type: gauge
        send: false

      # some pools are not limited, so their max size is reported as -1. That can cause calculation issues, so it is
      # probably better to not report it at all in such cases
      - name: pool.max
        source: func:IfThenElse(reported.pool.max, =, -1L, NULL, metric:reported.pool.max)
        type: gauge
        label: jvm pool used max
        description: jvm pool max memory
        unit: bytes

    tag:
      - name: jvm.memory.pool
        value: ${poolName}
