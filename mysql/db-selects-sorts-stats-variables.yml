type: db
data:
  query: SHOW /*!50002 GLOBAL */ VARIABLES;
  dbDriver:
    - url: jdbc:mysql://${SPM_MONITOR_MYSQL_DB_HOST_PORT}
      clazz: com.mysql.jdbc.Driver
    - url: jdbc:mariadb://${SPM_MONITOR_MYSQL_DB_HOST_PORT}
      clazz: org.mariadb.jdbc.Driver
  dbUser: ${SPM_MONITOR_MYSQL_DB_USER}
  dbPassword: ${SPM_MONITOR_MYSQL_DB_PASSWORD}
  dbAdditionalConnectionParams: ${SPM_MONITOR_MYSQL_DB_ADDITIONAL_PARAMS}
  #  dbVerticalModel="true" - because output of SHOW STATUS command gives each attribute in its own row
  # (1st column being attribute name, 2nd column being attribute value)
  dbVerticalModel: true

observation:
  - name: selectsSortsStatsVariables
    metricNamespace: mysql

    metric:
      - name: queries.sort.config.maxlength
        source: max_length_for_sort_data
        type: long_gauge
        label: max length for sort data
        description: "max_length_for_sort_data: The cutoff on the size of index values that determines which filesort algorithm to use"
        unit: bytes

      - name: queries.sort.config.sortlength
        source: max_sort_length
        type: long_gauge
        label: max sort length
        description: "max_sort_length: The number of bytes to use when sorting data values. Only the first max_sort_length bytes of each value are used; the rest are ignored"
        unit: bytes

      - name: queries.sort.config.buffer
        source: sort_buffer_size
        type: long_gauge
        label: sort buffer size
        description: "sort_buffer_size: Each session that needs to do a sort allocates a buffer of this size. sort_buffer_size is not specific to any storage engine and applies in a general manner for optimization. If you see many Sort_merge_passes per second, you can consider increasing the sort_buffer_size value to speed up ORDER BY or GROUP BY operations that cannot be improved with query optimization or improved indexing"
        unit: bytes

