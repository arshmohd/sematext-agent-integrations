type: db
data:
  query: SHOW /*!50002 GLOBAL */ STATUS;
  dbDriver:
    - url: jdbc:mysql://${ST_MONITOR_MYSQL_DB_HOST_PORT}
      clazz: com.mysql.jdbc.Driver
    - url: jdbc:mariadb://${ST_MONITOR_MYSQL_DB_HOST_PORT}
      clazz: org.mariadb.jdbc.Driver
  dbUser: ${ST_MONITOR_MYSQL_DB_USER}
  dbPassword: ${ST_MONITOR_MYSQL_DB_PASSWORD}
  dbAdditionalConnectionParams: ${ST_MONITOR_MYSQL_DB_ADDITIONAL_PARAMS}
  #  dbVerticalModel="true" - because output of SHOW STATUS command gives each attribute in its own row
  # (1st column being attribute name, 2nd column being attribute value)
  dbVerticalModel: true

observation:
  - name: selectsSortsStatsStatus
    metricNamespace: mysql

    metric:
      - name: queries.select.join.full
        source: Select_full_join
        type: counter
        label: select full join
        description: "Select_full_join: The number of joins that perform table scans because they do not use indexes. If this value is not 0, you should carefully check the indexes of your tables"

      - name: queries.select.join.range.full
        source: Select_full_range_join
        type: counter
        label: select full range join
        description: "Select_full_range_join: The number of joins that used a range search on a reference table"

      - name: queries.select.join.range
        source: Select_range
        type: counter
        label: select range
        description: "Select_range: The number of joins that used ranges on the first table. This is normally not a critical issue even if the value is quite large"

      - name: queries.select.join.check
        source: Select_range_check
        type: counter
        label: select range check
        description: "Select_range_check: The number of joins without keys that check for key usage after each row. If this is not 0, you should carefully check the indexes of your tables"

      - name: queries.select.join.scan
        source: Select_scan
        type: counter
        label: select scan
        description: "Select_scan: The number of joins that did a full scan of the first table"

      - name: queries.sort.mergepasses
        source: Sort_merge_passes
        type: counter
        label: sort merge passes
        description: "Sort_merge_passes: The number of merge passes that the sort algorithm has had to do. If this value is large, you should consider increasing the value of the sort_buffer_size system variable"

      - name: queries.sort.range
        source: Sort_range
        type: counter
        label: sort range
        description: "Sort_range: The number of sorts that were done using ranges"

      - name: queries.sort.rows
        source: Sort_rows
        type: counter
        label: sort rows
        description: "Sort_rows: The number of sorted rows"

      - name: queries.sort.scan
        source: Sort_scan
        type: counter
        label: sort scan
        description: "Sort_scan: The number of sorts that were done by scanning the table"

