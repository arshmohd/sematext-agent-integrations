type: db
data:
  query: "WITH overloaded_funcs AS
      (
        SELECT funcname
        FROM pg_stat_user_functions s
        GROUP BY s.funcname HAVING COUNT(*) > 1
      )
    SELECT
      s.schemaname,
      CASE
        WHEN
          o.funcname IS NULL OR
          p.proargnames IS NULL
        THEN p.proname
        ELSE p.proname || '_' || array_to_string(p.proargnames, '_')
      END funcname,
      calls,
      total_time,
      self_time
    FROM pg_proc p
    JOIN pg_stat_user_functions s
      ON p.oid = s.funcid
    LEFT JOIN overloaded_funcs o
      ON o.funcname = s.funcname;"
  dbUrl: jdbc:postgresql://${POSTGRESQL_DB_HOST_PORT}/${POSTGRESQL_DB_DATABASE}
  dbDriverClass: org.postgresql.Driver
  dbUser: ${POSTGRESQL_DB_USER}
  dbPassword: ${POSTGRESQL_DB_PASSWORD}
  dbAdditionalConnectionParams: ${POSTGRESQL_DB_ADDITIONAL_PARAMS}

observation:
  - name: function
    metricNamespace: postgresql
    rowIdColumns: schemaname,funcname

    metric:
      - name: function.schema
        source: schemaname
        type: text
        send: false
        label: schema name

      - name: function.name
        source: funcname
        type: text
        send: false
        label: function name

      - name: function.calls
        source: calls
        type: counter
        label: function calls
        description: Number of times this function has been called

      - name: function.time.total
        source: total_time
        type: counter
        unit: ms
        label: function total time
        description: Total time spent in this function and all other functions called by it, in milliseconds

      - name: function.time.self
        source: self_time
        type: counter
        unit: ms
        label: function self time
        description: Total time spent in this function itself, not including other functions called by it, in milliseconds

    tag:
      - name: postgresql.schema
        value: eval:${function.schema}
      - name: postgresql.function.name
        value: eval:${function.name}
